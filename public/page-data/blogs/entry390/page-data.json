{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/entry390/","result":{"data":{"site":{"siteMetadata":{"title":"銀ねこアトリエ"}},"allFile":{"edges":[{"node":{"name":"entry390","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/c361d2e921a2b3a0a83495eb086449a2/018b3/entry390.jpg","srcSet":"/static/c361d2e921a2b3a0a83495eb086449a2/15952/entry390.jpg 375w,\n/static/c361d2e921a2b3a0a83495eb086449a2/018b3/entry390.jpg 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/c361d2e921a2b3a0a83495eb086449a2/fd9fd/entry390.webp 375w,\n/static/c361d2e921a2b3a0a83495eb086449a2/66a24/entry390.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":480}}}}]},"markdownRemark":{"id":"246e4774-776a-5a53-8e11-2c1cff7db19a","excerpt":"1 pointer-events 要素のクリックを禁止したい時に重宝 プロパティ・は要素のクリックイベントを禁止したい時に使います。 個人的には使用頻度高めです。 pointer-events pointer-events の使い方と使いどころ パーツでいえばページネーションや、COMING SOON…","html":"<h2 id=\"1-pointer-events-要素のクリックを禁止したい時に重宝\">1 pointer-events 要素のクリックを禁止したい時に重宝</h2>\n<p>プロパティ・<code class=\"language-text\">pointer-events</code>は要素のクリックイベントを禁止したい時に使います。</p>\n<p>個人的には使用頻度高めです。</p>\n<p><img src=\"/a75d76919000b92b484b21b53384fa4a/entry390-1.gif\" alt=\"pointer-events\"></p>\n<h3 id=\"pointer-events-の使い方と使いどころ\">pointer-events の使い方と使いどころ</h3>\n<p>パーツでいえばページネーションや、COMING SOONにしてリンクが貼れないバナーなどに使うことが多めです。<br>\nCMSから吐き出すタグを<strong>自分では書き換えられないけどCSS側でクリックを禁止したい</strong>、などのケースで重宝します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- HTML -->\n&lt;a href=\"#\" aria-disabled>クリック禁止&lt;/a>\n&lt;a href=\"#\">クリック可能&lt;/a>\n\n// CSS\na[aria-disabled] {\n  pointer-events: none;\n}</code></pre></div>\n<h4 id=\"pointer-events-の値\">pointer-events の値</h4>\n<ul>\n<li><strong>auto</strong>　プロパティが指定されていないときと同様にふるまいます。</li>\n<li><strong>none</strong>　クリックイベント発火禁止</li>\n</ul>\n<h4 id=\"マジ-svg-に使えるの\">マジ? SVG に使えるの???!</h4>\n<p>HTML で実験的にSVGでも使えるそうです。<br>\nJSと合わせて使ったら面白いギミックが作れそうですね！！</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- HTML -->\n&lt;p class=\"fill\">\n  &lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    &lt;a xlink:href=\"#\">\n      &lt;circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"orange\" stroke-width=\"5\" fill=\"lightblue\">&lt;/circle>\n    &lt;/a>\n  &lt;/svg>\n&lt;/p>\n\n&lt;p class=\"stroke\">\n  &lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    &lt;a xlink:href=\"#\">\n      &lt;circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"orange\" stroke-width=\"5\" fill=\"lightblue\">&lt;/circle>\n    &lt;/a>\n  &lt;/svg>\n&lt;/p>\n\n// CSS\nsvg {\n  width: 100px;\n}\n\n.fill {\n  pointer-events: fill;\n}\n\n.fill circle{\n  fill: pink;\n  stroke: #bbb;\n  stroke-width: 20px;\n}\n\n.stroke {\n  pointer-events: stroke;\n}\n\n.stroke circle{\n  fill: aqua;\n  stroke: #bbb;\n  stroke-width: 20px;\n}</code></pre></div>\n<p><img src=\"/04c5b8a4fab6fe465be4dee3923715d7/entry390-2.gif\" alt=\"pointer-eventsマジ? SVG に使えるの???!\"></p>\n<ul>\n<li><strong>stroke</strong>　線のところのみ</li>\n<li><strong>fill</strong>　塗りのところのみ</li>\n</ul>\n<p>pointer-events のデモとリファレンス<br>\nSVG用の値はさらに用意されています！<br>\nこちらをお読みください。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/pointer-events\">pointer-events - CSS: カスケーディングスタイルシート| MDN web docs</a></li>\n<li><a href=\"https://codepen.io/camile/pen/eYzKNWj\">pointer-events SVGのデモ</a></li>\n</ul>\n<h2 id=\"2-resize-textarea-などでおなじみのサイズ調整をどの要素でも可能に\">2 resize textarea などでおなじみのサイズ調整をどの要素でも可能に</h2>\n<p>textarea がムダにビヨーンとん伸びてうざいことがありませんか？\nそれを解消するのが<strong>プロパティ・resize</strong>です。</p>\n<h3 id=\"resize-の使い方と使いどころ\">resize の使い方と使いどころ</h3>\n<p>リサイズによってデザインを崩したくない時などオススメです。</p>\n<p>よく横に伸びてデザインが崩れるのはやだなーと思うことが多いので、縦方向にのみサイズ調整できるverticalなんは重宝するんじゃないでしょうか？</p>\n<p>一応他の要素でも使用可能です。使い所は今のところ思い当たりませんが。。。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- HTML -->\n&lt;textarea class=\"none\">リサイズ不可&lt;/textarea>\n&lt;textarea class=\"virtical\">リサイズ不可&lt;/textarea>\n\n// CSS\n.none {\n  resize: none;\n}\n\n.horizontal {\n  resize: horizontal;\n}</code></pre></div>\n<h4 id=\"resize-の値\">resize の値</h4>\n<p><img src=\"/099f495ccf2f06f7637bc04fbd83717a/entry390-3.gif\" alt=\"resize の使い方と使いどころ\"></p>\n<ul>\n<li><strong>none</strong>　リサイズ不可。サイズ調整用の右下のつまみがなくなる</li>\n<li><strong>both</strong>　縦横双方リサイズ可能です。textareaのデフォルト値</li>\n<li><strong>vertical</strong>　縦方向のみリサイズ可能</li>\n<li><strong>horizontal</strong>　横方向のみリサイズ可能</li>\n</ul>\n<h4 id=\"resize-のデモとリファレンス\">resize のデモとリファレンス</h4>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/resize\">resize - CSS: カスケーディングスタイルシート| MDN web docs</a></li>\n<li><a href=\"https://codepen.io/camile/pen/ZEORGRq\">resize のデモ</a></li>\n</ul>\n<h2 id=\"3-appearance-フォームパーツのcssをリセットで重宝\">3 appearance フォームパーツのCSSをリセットで重宝</h2>\n<p>appearanceプロパティはチェックボックスやボタンなどの各フォームパーツの持っているスタイルを真似たり、もしくは打ち消す時に使います。</p>\n<h3 id=\"appearance-の使い方と使いどころ\">appearance の使い方と使いどころ</h3>\n<p>ボタンのCSSしっかりスタイリングしたつもりでも、iPhoneで見たら角丸グラデになっていて他のブラウザとデザインが違ったってことはありませんか？</p>\n<p>フォームパーツはブラウザごとに結構独自のスタイルを持っています。</p>\n<p><img src=\"/6488a25c5797219bf571ba893cc4183d/entry390-4.gif\" alt=\"appearance の使い方と使いどころ\"></p>\n<p>上記の画像を見てもらってわかる通り、Safari と FireFox のボタン要素には軽いグラデがかかっています。</p>\n<p>とりわけ、<strong>ボタンなどのフォームパーツは本当に厄介でCSSのリセットを相当こまめにやらなければいけません</strong>。\nそんな時重宝するのが<code class=\"language-text\">appearance</code>プロパティです。</p>\n<p>どちらかというと他のフォームパーツのスタイルを真似ることはないと思います。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- HTML -->\n&lt;p>&lt;button>ボタン&lt;/button>&lt;/p>\n&lt;p>&lt;button class=\"none\">ボタン&lt;/button>&lt;/p>\n\n// CSS\nbutton {\n  width: 200px;\n  height: 70px;\n}\n\n.none {\n  appearance: none;\n  border: none;\n  background: orange;\n}</code></pre></div>\n<h4 id=\"appearance-の値\">appearance の値</h4>\n<ul>\n<li><strong>none</strong>　フォーム特有のスタイルを打ち消します</li>\n<li><strong>auto</strong>　ユーザーエージェントが要素ごとにスタイルを適用します。</li>\n</ul>\n<p>フォームパーツは<code class=\"language-text\">appearance</code>だけではデフォルトのスタイルは打ち消しきれないので <code class=\"language-text\">border</code>や<code class=\"language-text\">background</code>も合わせてよく確認してスタイリングしましょう。</p>\n<h4 id=\"なぜフォームパーツがデフォルトで複雑なスタイリングになっているか考えたことはありますか？\">なぜフォームパーツがデフォルトで複雑なスタイリングになっているか考えたことはありますか？</h4>\n<p>フォームパーツはブラウザ上で操作するための重要な要素です。<br>\nユーザーが操作しやすいよう、目立たせたり操作に応じたリアクションが起こるように設計されています。<br>\n<strong>デフォルトのデザインが気に入らないからという理由で、表面上のスタイリングをするのはユーザーフレンドリーではない</strong>ですよね。<br>\nカスタマイズするときは、アクセシビリティを考慮してコーディングしていきましょう。</p>\n<h4 id=\"appearance-のデモとリファレンス\">appearance のデモとリファレンス</h4>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/appearance\">appearance - CSS: カスケーディングスタイルシート| MDN web</a></li>\n<li><a href=\"https://codepen.io/camile/pen/rNLKOVE\">appearance のデモ</a></li>\n</ul>\n<h2 id=\"4-columns-段落・段組みを超簡単に作れるプロパティ\">4 columns 段落・段組みを超簡単に作れるプロパティ</h2>\n<p><strong>プロパティcolumns</strong>は段組みされた要素の段の幅や段数を設定できるプロパティです。</p>\n<p><img src=\"/721bc12ecac477a98d3f0574b14243fc/entry390-5.gif\" alt=\"columns 段落・段組みを超簡単に作れるプロパティ\"></p>\n<h3 id=\"columns-の使い方と使いどころ\">columns の使い方と使いどころ</h3>\n<p>均等割の段組を作りたいことありますよね！<br>\n段落の数、隙間、また区切るためのボーダーなんかの値も用意されています。<br>\n<code class=\"language-text\">flex</code>や<code class=\"language-text\">grid</code>を使わずに実現可能です。</p>\n<p>以下のような段組がたった3行で書けます。<br>\ncolumnsには幅と数は設定できてどちらが前でも後ろでもOK。</p>\n<p><code class=\"language-text\">column-gap</code>は列の間の隙間、<code class=\"language-text\">column-rule</code> は間に挟むボーダーなどの装飾をセットできます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- HTML -->\n&lt;div class=\"columns\">\n  &lt;p>セブ島在住の広島生まれのIT戦士。平和と納期を死守。フリーランス。飲み友大歓迎。&lt;/p>\n  &lt;p>好きな人といるだけでパワースポット！13歳から「生きたいように生きて死にたいように死ぬ」 がモットー。&lt;/p>\n  &lt;p>人/フロント全般/concrete5/SEO/コーチング/酒/肉/海外移住&lt;/p>\n&lt;/div>\n\n// CSS\n.columns {\n  columns: 3 auto;\n  column-gap: 10px;\n  column-rule: dashed 1px #ccc;\n}</code></pre></div>\n<h4 id=\"columns-の値\">columns の値</h4>\n<p>幅と数のみです。サンプルの場合は3カラム、サイズはオートです。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/columns\">columns - CSS: カスケーディングスタイルシート| MDN web</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/column-gap\">column-gap - CSS: カスケーディングスタイルシート| MDN web</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/column-rule\">column-rule - CSS: カスケーディングスタイルシート| MDN web</a></li>\n<li><a href=\"https://codepen.io/camile/pen/qBNKOJr\">columns のデモ</a></li>\n</ul>\n<h2 id=\"5、writing-mode-最近流行り？の縦書きの実装\">5、writing-mode 最近流行り？の縦書きの実装</h2>\n<p><strong>プロパティ・writing-mode</strong>はテキストの行のレイアウトを横書きにするか縦書きにするか、ブロックのフロー方向を左向きにするか右向きにするかを設定することができます。</p>\n<p><img src=\"/484426f2a7e1ffb3a3176a8029826521/entry390-6.gif\" alt=\"writing-mode 最近流行り？の縦書き\"></p>\n<h3 id=\"writing-mode-の使い方と使いどころ\">writing-mode の使い方と使いどころ</h3>\n<p>昨今かなり紙のデザインのように、かなり自由なレイアウトが流行ってるので<code class=\"language-text\">flex</code>や<code class=\"language-text\">grid</code>などと組み合わせて、かっこいいデザインが作れそうです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- HTML -->\n&lt;p class=\"vertical-rl\">縦書き&lt;br>右から左へ&lt;/p>\n&lt;p class=\"vertical-lr\">縦書き&lt;br>左から右へ&lt;/p>\n\n// CSS\nbody {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 500px;\n}\n\np {\n  margin-bottom: 20px;\n}\n\n.vertical-rl {\n  writing-mode: vertical-rl;\n}\n\n.vertical-lr {\n  writing-mode: vertical-lr;\n}</code></pre></div>\n<h4 id=\"writing-mode-の値\">writing-mode の値</h4>\n<ul>\n<li><strong>horizontal-tb</strong>　デフォルト。左から右へ流れる</li>\n<li><strong>vertical-rl</strong>　上から下へ垂直に流れ、次の垂直の行は、前の行の左に配置される</li>\n<li><strong>vertical-lr</strong>　コンテンツは上から下へ垂直に流れ、次の垂直の行は、前の行の右に配置される</li>\n</ul>\n<p><strong>text-align: center</strong>文字が縦方向にセンタリング、<strong>text-align: right</strong>で文字が下揃えになるので戸惑うかもしれません。<br>\n文字を中央揃えにしたい場合は、<strong>flex</strong>などで調整するのが良さそうです。</p>\n<p>クセがあって、FireFox、Edgeで崩れると思います。<br>\n高さ（height）を決めてあげるとうまくいくと思います。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/CSS/writing-mode\">column-rule - CSS: カスケーディングスタイルシート| MDN web</a></li>\n<li><a href=\"https://codepen.io/camile/pen/NWrzGJm\">writing-modeのデモ</a></li>\n</ul>\n<h2 id=\"まとめ・定期的に使わないプロパティを開拓してコーディングスキルをアップデートしよう！\">まとめ・定期的に使わないプロパティを開拓してコーディングスキルをアップデートしよう！</h2>\n<p>たまに情報をキャッチアップしてアップデートしないといつの間にか古い書き方しか知らなくなっちゃいますよね。<br>\nたまに使い方を調べておくだけでも、いざ実装に困ったら引き出しが一個増えていて助かることもあります。</p>\n<p>以下CSSもわりとマニアックですので参考にしてください。</p>\n<a class=\"article-link\" href=\"/blogs/entry361\">\n<section><div class=\"article-link__img\"><img alt=\"CSS の shape-outside で特定の形の図形にテキストを回り込ませる\" src=\"/static/c2e2ffa0637929ac04d4ec6b6f95dee5/f836f/entry361.jpg\" width=\"150\" height=\"113\" class=\"\"></div><div class=\"article-link__main\">\n<div class=\"article-link__main__title\">CSS の shape-outside で特定の形の図形にテキストを回り込ませる</div>\n<p class=\"description\">最近 float 使ってますか？ 一昔前の横並びのカラムレイアウトの鉄板は float と クリアフィックス でした。 今は grid や ･･･</p>\n<p>\n<time datetime=\"2020-04-01\">2020.04.01</time>\n</p>\n</div>\n</section>\n</a>\n<a class=\"article-link\" href=\"/blogs/entry363\">\n<section><div class=\"article-link__img\"><img alt=\"CSSカウンターを使ってリストタグにナンバーを振る\" src=\"/static/d3d707b7c02bb897cc179d3feb35e47b/f836f/entry363.jpg\" width=\"150\" height=\"113\" class=\"\"></div><div class=\"article-link__main\">\n<div class=\"article-link__main__title\">CSSカウンターを使ってリストタグにナンバーを振る</div>\n<p class=\"description\">1-2、2-3みたいにリストや見出しにナンバーが振られているサイトを見かけて真似したいと思ったことありませんか？\nCSSカウンターというタグ･･･</p>\n<p>\n<time datetime=\"2020-03-29\">2020.03.29</time>\n</p>\n</div>\n</section>\n</a>\n<p>みなさんのコーディングライフの一助となれば幸いです。</p>\n<p>最後までお読みいただきありがとうございました。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-pointer-events-%E8%A6%81%E7%B4%A0%E3%81%AE%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF%E3%82%92%E7%A6%81%E6%AD%A2%E3%81%97%E3%81%9F%E3%81%84%E6%99%82%E3%81%AB%E9%87%8D%E5%AE%9D\">1 pointer-events 要素のクリックを禁止したい時に重宝</a></p>\n<ul>\n<li>\n<p><a href=\"#pointer-events-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E4%BD%BF%E3%81%84%E3%81%A9%E3%81%93%E3%82%8D\">pointer-events の使い方と使いどころ</a></p>\n<ul>\n<li><a href=\"#pointer-events-%E3%81%AE%E5%80%A4\">pointer-events の値</a></li>\n<li><a href=\"#%E3%83%9E%E3%82%B8-svg-%E3%81%AB%E4%BD%BF%E3%81%88%E3%82%8B%E3%81%AE\">マジ? SVG に使えるの???!</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-resize-textarea-%E3%81%AA%E3%81%A9%E3%81%A7%E3%81%8A%E3%81%AA%E3%81%98%E3%81%BF%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA%E8%AA%BF%E6%95%B4%E3%82%92%E3%81%A9%E3%81%AE%E8%A6%81%E7%B4%A0%E3%81%A7%E3%82%82%E5%8F%AF%E8%83%BD%E3%81%AB\">2 resize textarea などでおなじみのサイズ調整をどの要素でも可能に</a></p>\n<ul>\n<li>\n<p><a href=\"#resize-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E4%BD%BF%E3%81%84%E3%81%A9%E3%81%93%E3%82%8D\">resize の使い方と使いどころ</a></p>\n<ul>\n<li><a href=\"#resize-%E3%81%AE%E5%80%A4\">resize の値</a></li>\n<li><a href=\"#resize-%E3%81%AE%E3%83%87%E3%83%A2%E3%81%A8%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9\">resize のデモとリファレンス</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-appearance-%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%83%91%E3%83%BC%E3%83%84%E3%81%AEcss%E3%82%92%E3%83%AA%E3%82%BB%E3%83%83%E3%83%88%E3%81%A7%E9%87%8D%E5%AE%9D\">3 appearance フォームパーツのCSSをリセットで重宝</a></p>\n<ul>\n<li>\n<p><a href=\"#appearance-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E4%BD%BF%E3%81%84%E3%81%A9%E3%81%93%E3%82%8D\">appearance の使い方と使いどころ</a></p>\n<ul>\n<li><a href=\"#appearance-%E3%81%AE%E5%80%A4\">appearance の値</a></li>\n<li><a href=\"#%E3%81%AA%E3%81%9C%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%83%91%E3%83%BC%E3%83%84%E3%81%8C%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%A7%E8%A4%87%E9%9B%91%E3%81%AA%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E8%80%83%E3%81%88%E3%81%9F%E3%81%93%E3%81%A8%E3%81%AF%E3%81%82%E3%82%8A%E3%81%BE%E3%81%99%E3%81%8B%EF%BC%9F\">なぜフォームパーツがデフォルトで複雑なスタイリングになっているか考えたことはありますか？</a></li>\n<li><a href=\"#appearance-%E3%81%AE%E3%83%87%E3%83%A2%E3%81%A8%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9\">appearance のデモとリファレンス</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-columns-%E6%AE%B5%E8%90%BD%E3%83%BB%E6%AE%B5%E7%B5%84%E3%81%BF%E3%82%92%E8%B6%85%E7%B0%A1%E5%8D%98%E3%81%AB%E4%BD%9C%E3%82%8C%E3%82%8B%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3\">4 columns 段落・段組みを超簡単に作れるプロパティ</a></p>\n<ul>\n<li>\n<p><a href=\"#columns-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E4%BD%BF%E3%81%84%E3%81%A9%E3%81%93%E3%82%8D\">columns の使い方と使いどころ</a></p>\n<ul>\n<li><a href=\"#columns-%E3%81%AE%E5%80%A4\">columns の値</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5%E3%80%81writing-mode-%E6%9C%80%E8%BF%91%E6%B5%81%E8%A1%8C%E3%82%8A%EF%BC%9F%E3%81%AE%E7%B8%A6%E6%9B%B8%E3%81%8D%E3%81%AE%E5%AE%9F%E8%A3%85\">5、writing-mode 最近流行り？の縦書きの実装</a></p>\n<ul>\n<li>\n<p><a href=\"#writing-mode-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E4%BD%BF%E3%81%84%E3%81%A9%E3%81%93%E3%82%8D\">writing-mode の使い方と使いどころ</a></p>\n<ul>\n<li><a href=\"#writing-mode-%E3%81%AE%E5%80%A4\">writing-mode の値</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81%E3%83%BB%E5%AE%9A%E6%9C%9F%E7%9A%84%E3%81%AB%E4%BD%BF%E3%82%8F%E3%81%AA%E3%81%84%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E9%96%8B%E6%8B%93%E3%81%97%E3%81%A6%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B9%E3%82%AD%E3%83%AB%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E3%81%97%E3%82%88%E3%81%86%EF%BC%81\">まとめ・定期的に使わないプロパティを開拓してコーディングスキルをアップデートしよう！</a></p>\n</li>\n</ul>","frontmatter":{"title":"便利なのに使ってないの？！CSSプロパティ5選","date":"2020.11.03","description":"エンジニアとしてフロント技術をキャッチアップしなきゃと、CSS、特にプロパティのおさらいをしました。columns、pointer-events、writing-modeなど普段使わないのでないでしょうか？知っていれば、コーディングの幅がグンと広がりますよ！！ということで、この記事では私がよく使うCSSのプロパティやバリューの使い方などをさらに掘り下げまとめてみました。","lead":["フロントエンドエンジニア、今はプータローのかみーゆです。","エンジニアとしてフロント技術をキャッチアップしなきゃと、CSS、特にプロパティのおさらいをしました。","columns、pointer-events、writing-modeなど普段使わないのでないでしょうか？","知っていれば、コーディングの幅がグンと広がりますよ！！","ということで、この記事では私がよく使うCSSのプロパティやバリューの使い方などをさらに掘り下げまとめてみました。"],"hero":"2020/entry390.jpg","cateId":"web-developer","tags":["CSS"],"pagetype":"blog","modifieddate":null}},"previous":{"fields":{"slug":"/blogs/entry389/"},"frontmatter":{"title":"セブ島地域密着の生活・カーボンマーケットでお買い物しました"}},"next":{"fields":{"slug":"/blogs/entry392/"},"frontmatter":{"title":"SEOをマッチングアプリの出会いに例えてみた"}}},"pageContext":{"id":"246e4774-776a-5a53-8e11-2c1cff7db19a","previousPostId":"7a1b0a42-57c1-53f4-9583-f51f1714a1ab","nextPostId":"6cb81c47-b5f3-51a7-bea1-d9d304dae729","hero":"2020/entry390.jpg"}},"staticQueryHashes":["1145805751","2829560153","3000541721","3766793980"]}