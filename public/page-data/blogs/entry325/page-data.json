{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/entry325/","result":{"data":{"site":{"siteMetadata":{"title":"銀ねこアトリエ"}},"allFile":{"edges":[]},"markdownRemark":{"id":"febb7fb8-b115-573c-b46c-a663fba6a1b4","excerpt":"どんなにデザインがイケていても見られないWebサイトは価値がない いつも思っていますが、見られないサイトは価値がないです。 見られない原因としては、Webサイトが上位に上がってこない、つまりGoogleに評価されていないWebサイトということです。 Google…","html":"<h2 id=\"どんなにデザインがイケていても見られないwebサイトは価値がない\">どんなにデザインがイケていても見られないWebサイトは価値がない</h2>\n<p>いつも思っていますが、見られないサイトは価値がないです。</p>\n<p>見られない原因としては、Webサイトが上位に上がってこない、つまり<strong>Googleに評価されていないWebサイト</strong>ということです。</p>\n<h2 id=\"googleの評価とは？\">Googleの評価とは？</h2>\n<p>ざっくり簡単に説明するとユーザーにとって価値あるコンテンツか、ユーザー閲覧時にストレスを与えていない、この２つが主です。\nこの２つが評価されれば自ずと価値あるサイトと認められ、順位も上がってきます。</p>\n<p>本日は評価対象のユーザー閲覧時のストレスについてフォーカスします。</p>\n<h2 id=\"webサイトの表示スピードについて\">Webサイトの表示スピードについて</h2>\n<p>ユーザー閲覧時のストレスの原因の１つに表示スピードがあります。皆さんも、検索したページを開こうとして、なかなか表示されずイライラ、結果閲覧を諦めた経験があるのではないかと思います。</p>\n<p>Googleはユーザーフレンドリーを目指してるので、表示スピードが遅いのはユーザーに優しくないサイト！ということで低評価の一因にもなり得ます。</p>\n<p>ではどのような対処ができるのでしょう？</p>\n<h2 id=\"webサイトで使用する画像にまずは着目して欲しい\">Webサイトで使用する画像にまずは着目して欲しい</h2>\n<p>表示スピードの低下の大きな原因の１つに画像が挙げられます。\n画像の枚数が多い、画像が大きいなどが読み込みスピードに悪影響を与えています。</p>\n<ul>\n<li><strong>データ形式は適切か？</strong><br>まず、画像の種類にあったデータ形式かも確認します。データが無駄に肥大します。</li>\n</ul>\n<p>色数の多い風景写真のようなものが形式がPNGになってないか->JPEGへ変える。\nアンカーポイントが複雑かつ無駄に多い画像がSVG->PNGへ変えるなど考慮は必要です。</p>\n<ul>\n<li><strong>画像サイズは適切か？</strong><br>これ一番あるあるです。まんま使わずトリミングしてください。横幅5000pxとかのままであげるのマジ止めてください。最近では画像をオンラインでトリミングできるサービス山のようにあります。</li>\n</ul>\n<h3 id=\"画像を圧縮する\">画像を圧縮する</h3>\n<p>画像サイズを可能な限りオンラインツールもあります。\n画像加工ソフトとかない方は、オンラインサービスを使いましょう。</p>\n<ul>\n<li><a href=\"https://www.iloveimg.com/ja/compress-image\">I love image</a></li>\n<li><a href=\"https://compressjpeg.com/ja/\">compress jpg</a></li>\n<li><a href=\"https://imagecompressor.com/ja/\">Optimizilla</a></li>\n</ul>\n<h3 id=\"細かいアイコンはcssスプライトにまとめる\">細かいアイコンはCSSスプライトにまとめる</h3>\n<p>細かいアイコンはCSSスプライトで一枚の画像にまとめてしまいます。\n本来5個アイコンがあればサーバに5リクエストするところ、1リクエストですみます。</p>\n<p>CSSスプライトの作り方はこちらを参考に</p>\n<p><a href=\"https://ginneko-atelier.com/blogs/entory291\">CSSスプライトのコードは Sass の Mixin にとりあえずまとめとけ！</a></p>\n<h3 id=\"遅延読み込みlazyloadを使う\">遅延読み込み(LazyLoad)を使う</h3>\n<p>1ページあたりにたくさん画像があるのであれば、JSを使って画像の遅延読み込みを実装しましょう。画像の遅延読み込みとは画面をスクロールし、画像がディスプレイ上に現れた際に読み込むテクニックです。<br>\nLazyLoadなどjQueryライブラリを利用すれば比較的実装は容易です。</p>\n<p>もちろん、画像が初期ロード時に存在しないことになります。解析されないのでSEO的に困るという場合は画像データは構造化データに入れてあげましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"application/ld+json\"</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schema.org\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ImageObject\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://example.com/neko.jpg\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"銀ねこ\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schema.org\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ImageObject\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://example.com/neko2.jpg\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"銀ねこ2\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n</code></pre></div>\n<h3 id=\"css、html、jsなどのファイルの圧縮\">CSS、HTML、JSなどのファイルの圧縮</h3>\n<p>改行もファイルサイズアップに貢献しています。<br>\n特にCSSは可読性を追求すると改行だらけになりますよね？<br></p>\n<p>可能であればGulpなどのツールを使えばいいのですがなかなか難しいです。<br>\nオンラインサービスで手間をかけずにやりましょう。<br>\nなので、サイトリリースの際は圧縮してしまいます。</p>\n<p><a href=\"http://refresh-sf.com/\">Online JavaScript/CSS/HTML Compressor</a></p>\n<h3 id=\"ファイルを一個にまとめる\">ファイルを一個にまとめる</h3>\n<p>CSS、JSなどは思い切ってワンソース化しましょう。一個のファイルにまとめたら、サーバへのリクエスト数も減ります。</p>\n<p>これもGulpを使えば簡単です。やり方は後日まとめますね。</p>\n<h3 id=\"cmsなどの最初から用意されてる余分なファイルの読み込みをやめる\">CMSなどの最初から用意されてる余分なファイルの読み込みをやめる</h3>\n<p>WordPressなどでは、あらかじめ絵文字とか用意してありますが正直いらんです。<br>\nWordPressの場合余分なファイルの読み込みは以下で止めることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// 不要な機能を停止</span>\n<span class=\"token comment\">// 絵文字</span>\n<span class=\"token function\">remove_action</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'admin_print_scripts'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'print_emoji_detection_script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">remove_action</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'admin_print_styles'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'print_emoji_styles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 管理画面（ダッシュボード）での絵文字</span>\n<span class=\"token function\">remove_action</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'wp_head'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'print_emoji_detection_script'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">remove_action</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'wp_print_styles'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'print_emoji_styles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//余分なJSの読み込みを読み込まない</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">my_delete_local_jquery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//お問い合わせフォームは読み込む</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_page</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'contact'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">wp_deregister_script</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//jQuery</span>\n        <span class=\"token function\">wp_dequeue_script</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'google-recaptcha'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//リキャプチャ</span>\n        <span class=\"token function\">wp_deregister_style</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'contact-form-7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//contact form 7</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add_action</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'wp_enqueue_scripts'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'my_delete_local_jquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ただし、フォーム系のプラグインを入れていると動かなくなることもあるので気をつけましょう。</p>\n<h3 id=\"lighthouseでチェック\">Lighthouseでチェック</h3>\n<p>ChromeのサイトチェックツールにLighthouse（Google拡張機能）というものがあります。シークレットブラウザで、使えるようにしておくことがミソです。</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=ja\">Lighthouse(Google拡張機能)</a></p>\n<p>Chromeでシークレットブラウザで使えるようにする方法は別記事にまとめます。</p>\n<h2 id=\"まとめ\">まとめ</h2>\n<p>いかがでしたでしょうか？<br>\n全ての項目を実施すると相当ページの読み込みスピードは早くなります。<br>\nでもコンテンツをとことん読んで欲しい時はページそのものをamp化しちゃうのが一番いい気がします。</p>\n<p>最後までお読みいただきありがとうございました。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E3%81%A9%E3%82%93%E3%81%AA%E3%81%AB%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%8C%E3%82%A4%E3%82%B1%E3%81%A6%E3%81%84%E3%81%A6%E3%82%82%E8%A6%8B%E3%82%89%E3%82%8C%E3%81%AA%E3%81%84web%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AF%E4%BE%A1%E5%80%A4%E3%81%8C%E3%81%AA%E3%81%84\">どんなにデザインがイケていても見られないWebサイトは価値がない</a></p>\n</li>\n<li>\n<p><a href=\"#google%E3%81%AE%E8%A9%95%E4%BE%A1%E3%81%A8%E3%81%AF%EF%BC%9F\">Googleの評価とは？</a></p>\n</li>\n<li>\n<p><a href=\"#web%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%82%B9%E3%83%94%E3%83%BC%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">Webサイトの表示スピードについて</a></p>\n</li>\n<li>\n<p><a href=\"#web%E3%82%B5%E3%82%A4%E3%83%88%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E7%94%BB%E5%83%8F%E3%81%AB%E3%81%BE%E3%81%9A%E3%81%AF%E7%9D%80%E7%9B%AE%E3%81%97%E3%81%A6%E6%AC%B2%E3%81%97%E3%81%84\">Webサイトで使用する画像にまずは着目して欲しい</a></p>\n<ul>\n<li><a href=\"#%E7%94%BB%E5%83%8F%E3%82%92%E5%9C%A7%E7%B8%AE%E3%81%99%E3%82%8B\">画像を圧縮する</a></li>\n<li><a href=\"#%E7%B4%B0%E3%81%8B%E3%81%84%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%81%AFcss%E3%82%B9%E3%83%97%E3%83%A9%E3%82%A4%E3%83%88%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B\">細かいアイコンはCSSスプライトにまとめる</a></li>\n<li><a href=\"#%E9%81%85%E5%BB%B6%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BFlazyload%E3%82%92%E4%BD%BF%E3%81%86\">遅延読み込み(LazyLoad)を使う</a></li>\n<li><a href=\"#css%E3%80%81html%E3%80%81js%E3%81%AA%E3%81%A9%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%9C%A7%E7%B8%AE\">CSS、HTML、JSなどのファイルの圧縮</a></li>\n<li><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%B8%80%E5%80%8B%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B\">ファイルを一個にまとめる</a></li>\n<li><a href=\"#cms%E3%81%AA%E3%81%A9%E3%81%AE%E6%9C%80%E5%88%9D%E3%81%8B%E3%82%89%E7%94%A8%E6%84%8F%E3%81%95%E3%82%8C%E3%81%A6%E3%82%8B%E4%BD%99%E5%88%86%E3%81%AA%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E3%82%92%E3%82%84%E3%82%81%E3%82%8B\">CMSなどの最初から用意されてる余分なファイルの読み込みをやめる</a></li>\n<li><a href=\"#lighthouse%E3%81%A7%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF\">Lighthouseでチェック</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></p>\n</li>\n</ul>","frontmatter":{"title":"Webサイトの表示速度を真剣に考える","date":"2019.06.21","description":"昔いた会社で、画像の圧縮、CSSなどの外部ファイルを徹底して不要ファイルを削除して圧縮してさらにワンソース化した結果、50位から20位以内に順位が改善したことがあります。今日はWebサイトの軽量化とスピードについて真剣に考えようと思います。","lead":["昔いた会社で、画像の圧縮、CSSなどの外部ファイルを徹底して不要ファイルを削除して圧縮してさらにワンソース化した結果、50位から20位以内に順位が改善したことがあります。","今日はWebサイトの軽量化とスピードについて真剣に考えようと思います。"],"hero":"entry325.png","cateId":"seo","tags":["seo","Gulp","SCSS"],"pagetype":"blog","modifieddate":null}},"previous":{"fields":{"slug":"/blogs/entry323/"},"frontmatter":{"title":"オブジェクト指向プログラミングをキャバクラに例えてみた"}},"next":{"fields":{"slug":"/blogs/entry334/"},"frontmatter":{"title":"HTMLとCSSのあり方ガチで考えてみた"}}},"pageContext":{"id":"febb7fb8-b115-573c-b46c-a663fba6a1b4","previousPostId":"4a5c5587-e6d1-5d02-a4cc-8968fb2d2e77","nextPostId":"de258627-a512-5bb3-bd6c-0eb7b202ee22","hero":"entry325.png"}},"staticQueryHashes":["1145805751","2829560153","3000541721","3766793980"]}