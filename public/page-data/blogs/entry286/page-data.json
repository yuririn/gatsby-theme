{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/entry286/","result":{"data":{"site":{"siteMetadata":{"title":"銀ねこアトリエ"}},"allFile":{"edges":[{"node":{"name":"entry267","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#686858","images":{"fallback":{"src":"/static/26d255e812269790c9718ae1f173682d/0fbb2/entry267.png","srcSet":"/static/26d255e812269790c9718ae1f173682d/294f4/entry267.png 375w,\n/static/26d255e812269790c9718ae1f173682d/0fbb2/entry267.png 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/26d255e812269790c9718ae1f173682d/fd9fd/entry267.webp 375w,\n/static/26d255e812269790c9718ae1f173682d/66a24/entry267.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":480}}}}]},"markdownRemark":{"id":"d18a8b5c-a282-51b1-bb38-0c50b2dd7dc8","excerpt":"GitHub からソースを拾ってこよう 以下サイトよりダウンロードします。\nClone or download をクリック後、Download ZIPでおっけーです。 https://github.com/hsnaydd/moveTo dist/内に moveTo.js と moveTo.min.js…","html":"<h2 id=\"github-からソースを拾ってこよう\">GitHub からソースを拾ってこよう</h2>\n<p>以下サイトよりダウンロードします。\nClone or download をクリック後、Download ZIPでおっけーです。</p>\n<p><a href=\"https://github.com/hsnaydd/moveTo\">https://github.com/hsnaydd/moveTo</a></p>\n<p>dist/内に moveTo.js と moveTo.min.js がありますので、後者のミニファイ（圧縮）されたファイルの方を使いましょう。</p>\n<h2 id=\"ページ内リンクをスムーズスクロール設定する\">ページ内リンクをスムーズスクロール設定する</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const moveto = new MoveTo({\n  tolerance: 0,\n  duration: 800,\n  easing: 'easeOutQuart'\n})</code></pre></div>\n<table>\n<thead>\n<tr>\n<th>値</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tolerance</td>\n<td>スクロール到達地点の許容誤差を補正。初期値は「0」。ヘッダー固定などしているときは少し調整すると良い。</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>移動時間をミリ秒単位で指定できる。初期値は「800」。</td>\n</tr>\n<tr>\n<td>easing</td>\n<td>スクロールのイージング描画の種類を指定します。初期値は「easeOutQuart」。</td>\n</tr>\n<tr>\n<td>callback</td>\n<td>スクロール終了時に実行される処理を指定可能。</td>\n</tr>\n</tbody>\n</table>\n<p>初期値のままで使いたい場合は、以下のように指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const moveto = new MoveTo()</code></pre></div>\n<p>スクロール終了時に何かしら処理を加えることもできます。コールバックを指定したいときはこんな感じで書けばおっけー。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const moveto = new MoveTo({\n  callback: function () {\n    alert('スクロールしたよ！')\n  }\n})</code></pre></div>\n<h3 id=\"個別に設定する\">個別に設定する</h3>\n<p>class を js-trigger に設定するとスクロールの対象になります。<br>\nターゲットの設定は aタグであれば href属性にまんま書いてもいいし、ボタンタグなどであればカスタム属性 data-taget の値に指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;a class=\"js-trigger\" data-mt-duration=\"300\" href=\"#target\">Trigger&lt;/a>\n&lt;button class=\"js-trigger\" data-mt-duration=\"300\" data-target=\"#target\" type=\"button\">Trigger&lt;/button></code></pre></div>\n<h3 id=\"まとめて設定する\">まとめて設定する</h3>\n<p>#(ハッシュ)から始まる href の値が指定してあるaタグのみスムーズスクロールできるようにします。\nちなみに href は hypertext reference の略です。\n<code class=\"language-text\">href^=</code>で値が#から始まる aタグのみを配列化できます。</p>\n<p><code class=\"language-text\">forEach()</code>を使って一気に指定することも可能です。モダンブラウザであれば、<code class=\"language-text\">Array.prototype.slice.call</code>の指定は必要ありませんが、IE11では動きません！IE対策のために一行追加しましょう。</p>\n<p>moveto.registerTrigger()で何をクリックしたら、moveTo が動くかを設定してやります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let anchorTags = document.querySelectorAll('a[href^=\"#\"]')\nanchorTags = Array.prototype.slice.call(anchorTags, 0)//IE対策\nanchorTags.forEach((value) => {\n  moveto.registerTrigger(value)\n})</code></pre></div>\n<h2 id=\"webpack-から追加してみる\">webpack から追加してみる</h2>\n<p>せっかくなので webpack で js もワンソース化しましょう。私は gulp と webpack 使ってます。<code class=\"language-text\">npm install</code> で追加してます。</p>\n<p>webpack が入っていない人は入れてください。後日 webpack の導入の仕方は別に記事書きます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm install webpack webpack-stream -D</code></pre></div>\n<p>moveTo をインストールします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm install moveto -D</code></pre></div>\n<h3 id=\"最新の-webpack-の場合\">最新の webpack の場合</h3>\n<p>最新の webpack (4系)であれば webpack ムダに指示を書く必要はありません。<br>\nimport で呼び出せます。なんて楽ちん。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import MoveTo from 'moveto'\nconst moveto = new MoveTo()\nlet anchorTags = document.querySelectorAll('a[href^=\"#\"]')\nanchorTags = Array.prototype.slice.call(anchorTags, 0)//IE対策\nanchorTags.forEach(　(value) => {\n  moveto.registerTrigger(value)\n})</code></pre></div>\n<h2 id=\"まとめ\">まとめ</h2>\n<p>いかがでしたか？<br>\njQueryなしでわりかし簡単に設定できるしとにかく軽いのは嬉しいです。ぜひ使ってみてください。</p>\n<p>追記 : 12/14に<a href=\"https://twitter.com/eielh/status/1073557594751459328\">指摘</a>を受け、記事を修正・追記いたしました。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#github-%E3%81%8B%E3%82%89%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E6%8B%BE%E3%81%A3%E3%81%A6%E3%81%93%E3%82%88%E3%81%86\">GitHub からソースを拾ってこよう</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%9A%E3%83%BC%E3%82%B8%E5%86%85%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E3%82%B9%E3%83%A0%E3%83%BC%E3%82%BA%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\">ページ内リンクをスムーズスクロール設定する</a></p>\n<ul>\n<li><a href=\"#%E5%80%8B%E5%88%A5%E3%81%AB%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\">個別に設定する</a></li>\n<li><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\">まとめて設定する</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#webpack-%E3%81%8B%E3%82%89%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\">webpack から追加してみる</a></p>\n<ul>\n<li><a href=\"#%E6%9C%80%E6%96%B0%E3%81%AE-webpack-%E3%81%AE%E5%A0%B4%E5%90%88\">最新の webpack の場合</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></p>\n</li>\n</ul>","frontmatter":{"title":"脱 jQuery！軽量のスクロール JS・MoveTo が便利","date":"2018.12.14","description":"みなさん、スムーズスクロールは好きですか？最近 jQueryなしで使える jsライブラリの MoveTo がお気に入りです。ということで、今日はMoveTo の使い方をご紹介します。","lead":["みなさん、スムーズスクロールは好きですか？最近 jQueryなしで使える jsライブラリの MoveTo がお気に入りです。ということで、今日はMoveTo の使い方をご紹介します。"],"hero":"2018/entry267.png","cateId":"web-developer","tags":["JavaScript"],"pagetype":"blog","modifieddate":null}},"previous":{"fields":{"slug":"/blogs/entry285/"},"frontmatter":{"title":"Webクリエータを目指すリスタート組の君たちへ season2"}},"next":{"fields":{"slug":"/blogs/entry291/"},"frontmatter":{"title":"CSSスプライトのコードは Sass の Mixin にとりあえずまとめとけ！"}}},"pageContext":{"id":"d18a8b5c-a282-51b1-bb38-0c50b2dd7dc8","previousPostId":"1e4f65cd-4802-5db0-9c64-75fad4b83aba","nextPostId":"da648550-b86c-5b26-abc8-a73cc21a4d87","hero":"2018/entry267.png"}},"staticQueryHashes":["1145805751","2829560153","3000541721","3766793980"]}