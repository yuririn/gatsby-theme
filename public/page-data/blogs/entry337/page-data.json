{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/entry337/","result":{"data":{"site":{"siteMetadata":{"title":"銀ねこアトリエ"}},"allFile":{"edges":[{"node":{"name":"entry211","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8b888","images":{"fallback":{"src":"/static/c00a1ad6ac74b4ff881b3a105663bb57/0fbb2/entry211.png","srcSet":"/static/c00a1ad6ac74b4ff881b3a105663bb57/cc1cd/entry211.png 350w,\n/static/c00a1ad6ac74b4ff881b3a105663bb57/0fbb2/entry211.png 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/c00a1ad6ac74b4ff881b3a105663bb57/4c075/entry211.webp 350w,\n/static/c00a1ad6ac74b4ff881b3a105663bb57/66a24/entry211.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":480}}}}]},"markdownRemark":{"id":"7988ea3b-4c1b-58ae-9f0f-e8e04609af97","excerpt":"そもそも、管理画面側で入力項目を必須にする必要はない ウェブ制作でプライバシーポリシーが重要な昨今、プライバシーポリシーへの同意ってめちゃ大事です。\n単純にプライバシーポリシーに同意するという項目にチェックを入れてなかった場合に、送信できないようにしたかったのですが contact form…","html":"<h2 id=\"そもそも、管理画面側で入力項目を必須にする必要はない\">そもそも、管理画面側で入力項目を必須にする必要はない</h2>\n<p>ウェブ制作でプライバシーポリシーが重要な昨今、プライバシーポリシーへの同意ってめちゃ大事です。\n単純にプライバシーポリシーに同意するという項目にチェックを入れてなかった場合に、送信できないようにしたかったのですが contact form 7 では必須項目でのエラーメッセージは全て一緒です。</p>\n<p>ちょっとユーザーに対して優しくないのでチェックがない場合エラーメッセージを変更しようと考えました。</p>\n<p>ズバリ、最初から管理画面で<strong>必須にせず、エラーメッセージをコントロール</strong>するだけ。</p>\n<p>fuctions.php に add_filter で wpcf7_validate にフックするコードを書けば OK。</p>\n<p>以下のコードの例は、checkboxです。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// contact form 7 バリデーション追加</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">wpcf7_validate_customize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tags</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$tags</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$tag</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//タグの種類 input・textareaなど</span>\n        <span class=\"token variable\">$type</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$tag</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// name属性</span>\n        <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$tag</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$post</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token function\">strtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'checkbox'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'agreement'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 指定のname属性のバリデーションに任意のメッセージを追加</span>\n                <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'プライバシーポリシーに同意してください。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>    <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'wpcf7_validate'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'wpcf7_validate_customize'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>以上です。</p>","tableOfContents":"<ul>\n<li><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82%E3%80%81%E7%AE%A1%E7%90%86%E7%94%BB%E9%9D%A2%E5%81%B4%E3%81%A7%E5%85%A5%E5%8A%9B%E9%A0%85%E7%9B%AE%E3%82%92%E5%BF%85%E9%A0%88%E3%81%AB%E3%81%99%E3%82%8B%E5%BF%85%E8%A6%81%E3%81%AF%E3%81%AA%E3%81%84\">そもそも、管理画面側で入力項目を必須にする必要はない</a></li>\n</ul>","frontmatter":{"title":"Contact Form 7 で必須項目のエラーメッセージをカスタム","date":"2019.08.02","description":"WordPressサイトだけでも月1くらいのペースで制作しています。よく、フォーム系のプラグインのお世話になります。中でもContact Form 7はお気に入りでめっちゃ奥が深いですね！カスタマイズする時こころおどります！今回は発想の転換で必須項目のエラーメッセージを変えたのでそのやり方をメモしておきます。","lead":["WordPressサイトだけでも月1くらいのペースで制作しています。","よく、フォーム系のプラグインのお世話になります。中でもContact Form 7はお気に入りでめっちゃ奥が深いですね！","カスタマイズする時こころおどります！今回は発想の転換で必須項目のエラーメッセージを変えたのでそのやり方をメモしておきます。"],"hero":"2014/entry211.png","cateId":"cms","tags":["WordPress"],"pagetype":"blog","modifieddate":null}},"previous":{"fields":{"slug":"/blogs/entry336/"},"frontmatter":{"title":"VS Codeでカンタン！正規表現置換のためのチートシート"}},"next":{"fields":{"slug":"/blogs/entry338/"},"frontmatter":{"title":"古いSEO手法でボロボロだったサイトを改善させた話"}}},"pageContext":{"id":"7988ea3b-4c1b-58ae-9f0f-e8e04609af97","previousPostId":"8ab713c3-7623-523b-bc36-18340fb37d1f","nextPostId":"f9bea992-2155-5467-aa04-238a019ebf2b","hero":"2014/entry211.png"}},"staticQueryHashes":["1145805751","2829560153","3000541721","3766793980"]}