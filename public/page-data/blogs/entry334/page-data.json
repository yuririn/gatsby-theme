{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/entry334/","result":{"data":{"site":{"siteMetadata":{"title":"銀ねこアトリエ"}},"allFile":{"edges":[]},"markdownRemark":{"id":"de258627-a512-5bb3-bd6c-0eb7b202ee22","excerpt":"HTMLを書く時の心がけ 突然ですがみなさん、HTMLを書く時どんな気持ちで書いてますか？\n私は以下2点をめちゃめちゃ心がけてます。 1、検索エンジンに何がどういう役割を持ってるか伝える HTMLはマークアップ言語です。pタグはパラグラフ（段落）とか大見出し（heading）はh…","html":"<h2 id=\"htmlを書く時の心がけ\">HTMLを書く時の心がけ</h2>\n<p>突然ですがみなさん、HTMLを書く時どんな気持ちで書いてますか？<br>\n私は以下2点をめちゃめちゃ心がけてます。</p>\n<h3 id=\"1、検索エンジンに何がどういう役割を持ってるか伝える\">1、検索エンジンに何がどういう役割を持ってるか伝える</h3>\n<p>HTMLはマークアップ言語です。pタグはパラグラフ（段落）とか大見出し（heading）はh1とか役割を持ったタグでコンテンツをマークアップします。<br>\n人間は文字が大きかったり太字だったりすれば視覚的にどのコンテンツの重要かなどが判断できますが検索エンジンはそれが出来ないです。<br>\nなので可能な限り適切なタグを使ってマークアップする必要があります。</p>\n<h3 id=\"2、全ての人が読めるコンテンツを提供するためのマークアップをする\">2、全ての人が読めるコンテンツを提供するためのマークアップをする</h3>\n<p>Webコンテンツを読む人は健常者ばかりではありません。目が見えない人もいるので音声読み上げソフトで読まれるとき、どの順番で読まれるかなども配慮しています。</p>\n<p>アクセシビリティはHTMLをどうマークアップするかにかかってます。</p>\n<p>特に大切なのは見出しだと思っています。見出しは一括りのコンテンツの概要です。雑誌や新聞などでも見出しを読んで興味なければスキップしますよね？</p>\n<p>検索エンジンにとって大切なのはユーザーに有用なコンテンツを提供しているか否か。どこが重要かなどがわかるようにマークアップする必要があります。</p>\n<p>そして自分の作ったWebサイトをどんな人がみているか想像してますか？\n目の見えない方がWebサイトを閲覧するときは音声読み上げソフトを使います。見出し（概要）を聞いてこのコンテンツに興味があるかないかを判断するのではないでしょうか？もし興味なければ、次のコンテンツにスキップしますよね？</p>\n<p>なので、コーディングする際はちゃんと文書構造に気を遣う必要があるんです。意味のないタグを使っても後からrole属性やARIA属性を追加して意味を持たせてあげる必要があります。</p>\n<p>Webサイトはネットにアクセスできる万人にコンテンツを提供していることを忘ないことが大切です。</p>\n<h2 id=\"cssを書く時の心がけ\">CSSを書く時の心がけ</h2>\n<p>CSSはHTMLの<strong>見た目を整える言語</strong>です。\nなのでHTMLほど検索エンジンに気遣う必要はないと私は認識してます。\nあくまで閲覧する人間のために、コンテンツが読みやすい、Webサイトが使いやすいように整えるために使えばいいと思っています。しかもそのデザインをするのはデザイナの仕事なので本日は割愛します。</p>\n<p>CSSは厄介な言語だと思います。ページ数が多いページが長くなってくるとスタイルも増えて、コードをうっかり上書きしてしまったり、それを防ぐためにimportant（強制的に実装）乱用して、結果コードがぐっちゃぐっちゃということもありますね。</p>\n<p>なのでCSSの骨組み（設計）を考える上で3つにわけてCSSを書くと楽になります。\nレゴなんてその考え方の集大成ですよね。様々な形のブロック（モジュール）を組み合わせてプロダクトを作ることができます。今更ですがやったことない人レゴやったほうがいいですよ。</p>\n<p>ちなみに以下はあくまで私が意識している基本概念です。</p>\n<h3 id=\"1、レイアウト（大枠・部品を入れるエリア）用のスタイリングをする\">1、レイアウト（大枠・部品を入れるエリア）用のスタイリングをする</h3>\n<p>まず、どんな容器を用意するか考えます。\n容器は部品を入れるエリアです。お弁当箱を想像するとわかりやすです。\nお弁当箱でいうと間仕切りですね。</p>\n<h3 id=\"2、部品化（モジュール化）する\">2、部品化（モジュール化）する</h3>\n<p>ボタン、見出しなど部品化する。それぞれのレイアウト内に配置する。\nお弁当の各おかずです。</p>\n<h3 id=\"3、部品のバリエーションを増やす\">3、部品のバリエーションを増やす</h3>\n<p>部品の色違い、サイズ違いを作り、どの部品がどんな役割を持っているかわかるようになる。\nいつも同じおかずだと飽きちゃいます。</p>\n<p>CSSは意味のもったタグを視覚的に人に伝わるように整えることがいちばんの目的ですが、設計・整理して破綻しないように書くことが重要です。</p>\n<h2 id=\"まとめ-制作物の先にいろんなユーザーがいる\">まとめ　制作物の先にいろんなユーザーがいる</h2>\n<p>HTML、CSSのことを真剣に考えてみましたが、公開した先に誰が見るかがゴール。</p>\n<p>検索エンジンは常にユーザーにとって読みやすいかなど考えてますのでユーザーフレンドリーなコーディングを好みますしね。最終的にはコンテンツをいろんな人が読めることがポイントです。</p>\n<ul>\n<li><strong>HTML</strong> … 適切なタグを使い、コンテンツを読まれるべき順番に並べて意味のあるマークアップをする。目が見えないなど、スクリーンリーダーで閲覧する障害者にも配慮する。</li>\n<li><strong>CSS</strong> … 人間はHTMLタグをいちいち読まないので、どのタグでマークアップされたところにどんな意味があるかなどをデザインを通じて実装する。</li>\n</ul>\n<p>CSSは破綻しやすい言語なので「部品」と「容器」というイメージでコーディングしていくと管理しやすい。\n最後までお読みいただきありがとうございました。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#html%E3%82%92%E6%9B%B8%E3%81%8F%E6%99%82%E3%81%AE%E5%BF%83%E3%81%8C%E3%81%91\">HTMLを書く時の心がけ</a></p>\n<ul>\n<li><a href=\"#1%E3%80%81%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%81%AB%E4%BD%95%E3%81%8C%E3%81%A9%E3%81%86%E3%81%84%E3%81%86%E5%BD%B9%E5%89%B2%E3%82%92%E6%8C%81%E3%81%A3%E3%81%A6%E3%82%8B%E3%81%8B%E4%BC%9D%E3%81%88%E3%82%8B\">1、検索エンジンに何がどういう役割を持ってるか伝える</a></li>\n<li><a href=\"#2%E3%80%81%E5%85%A8%E3%81%A6%E3%81%AE%E4%BA%BA%E3%81%8C%E8%AA%AD%E3%82%81%E3%82%8B%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%82%92%E6%8F%90%E4%BE%9B%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E3%82%92%E3%81%99%E3%82%8B\">2、全ての人が読めるコンテンツを提供するためのマークアップをする</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#css%E3%82%92%E6%9B%B8%E3%81%8F%E6%99%82%E3%81%AE%E5%BF%83%E3%81%8C%E3%81%91\">CSSを書く時の心がけ</a></p>\n<ul>\n<li><a href=\"#1%E3%80%81%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88%EF%BC%88%E5%A4%A7%E6%9E%A0%E3%83%BB%E9%83%A8%E5%93%81%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B%E3%82%A8%E3%83%AA%E3%82%A2%EF%BC%89%E7%94%A8%E3%81%AE%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%99%E3%82%8B\">1、レイアウト（大枠・部品を入れるエリア）用のスタイリングをする</a></li>\n<li><a href=\"#2%E3%80%81%E9%83%A8%E5%93%81%E5%8C%96%EF%BC%88%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%8C%96%EF%BC%89%E3%81%99%E3%82%8B\">2、部品化（モジュール化）する</a></li>\n<li><a href=\"#3%E3%80%81%E9%83%A8%E5%93%81%E3%81%AE%E3%83%90%E3%83%AA%E3%82%A8%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%A2%97%E3%82%84%E3%81%99\">3、部品のバリエーションを増やす</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81-%E5%88%B6%E4%BD%9C%E7%89%A9%E3%81%AE%E5%85%88%E3%81%AB%E3%81%84%E3%82%8D%E3%82%93%E3%81%AA%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%81%8C%E3%81%84%E3%82%8B\">まとめ　制作物の先にいろんなユーザーがいる</a></p>\n</li>\n</ul>","frontmatter":{"title":"HTMLとCSSのあり方ガチで考えてみた","date":"2019.07.18","description":"HTMLとCSSのあり方について考えたことはありますか？検索エンジン、ユーザーなどを踏まえて私の考え方を述べようと思います。","lead":["HTMLとCSSのあり方について考えたことはありますか？検索エンジン、ユーザーなどを踏まえて私の考え方を述べようと思います。"],"hero":"entry172.jpg","cateId":"web-developer","tags":["UX/UI","CSS","アクセシビリティ"],"pagetype":"blog","modifieddate":null}},"previous":{"fields":{"slug":"/blogs/entry325/"},"frontmatter":{"title":"Webサイトの表示速度を真剣に考える"}},"next":{"fields":{"slug":"/blogs/entry335/"},"frontmatter":{"title":"CSSの変な仕様あるあるを力一杯列挙してみた"}}},"pageContext":{"id":"de258627-a512-5bb3-bd6c-0eb7b202ee22","previousPostId":"febb7fb8-b115-573c-b46c-a663fba6a1b4","nextPostId":"d52e858c-3bc0-5a19-8ff0-ed869de6e61c","hero":"entry172.jpg"}},"staticQueryHashes":["1145805751","2829560153","3000541721","3766793980"]}