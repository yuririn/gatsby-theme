{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/blogList/pagination.js","webpack://gatsby-starter-blog/./src/components/blogs/tag-list.js","webpack://gatsby-starter-blog/./src/components/common/add-tag-link.js","webpack://gatsby-starter-blog/./src/components/common/bread-crumb-list.js","webpack://gatsby-starter-blog/./src/components/common/genre.js","webpack://gatsby-starter-blog/./src/components/common/profile.js","webpack://gatsby-starter-blog/./src/components/img.js","webpack://gatsby-starter-blog/./src/templates/genre-list.js"],"names":["Li","num","current","path","className","Link","to","Prev","type","Next","Skip","show","array","index","push","PagerWrapper","map","i","styled","tags","useStaticQuery","allMarkdownRemark","edges","reduce","edge","edgeTags","node","frontmatter","concat","counts","length","key","tag","name","count","TagList","Tag","encodeURI","BreadCrumb","Ganre","siteMetadata","item","slug","enName","description","filename","alt","Profile","img","allFile","find","relativePath","includes","G","image","getImage","childImageSharp","layout","category","pageContext","data","location","cateSlug","page","totalCount","cateName","cateDescription","cate","title","fields","hero","date","replace"],"mappings":"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","file":"component---src-templates-genre-list-js-0130eae1041345afcb12.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Li = ({ num, current, path }) => {\n  if (current) {\n    return (\n      <li className=\"c-pager--archive__current c-pager--archive__num\">\n        <span>{num}</span>\n      </li>\n    );\n  } else {\n    return (\n      <li className=\"c-pager--archive__num\">\n        <Link to={path}>{num}</Link>\n      </li>\n    );\n  }\n};\n\nconst Prev = ({ current, type }) => {\n  if (current === 1) {\n    return (\n      <li className=\"c-pager--archive__prev not-work\">\n        <span>Newer</span>\n      </li>\n    );\n  } else if (current === 2) {\n    return (\n      <li className=\"c-pager--archive__prev\">\n        <Link to={`/blogs/${type}`}>Newer</Link>\n      </li>\n    );\n  } else {\n    return (\n      <li className=\"c-pager--archive__prev\">\n        <Link to={`/blogs/${type}page/${current - 1}/`}>Newer</Link>\n      </li>\n    );\n  }\n};\n\nconst Next = ({ num, current, type }) => {\n  if (current === num) {\n    return (\n      <li className=\"c-pager--archive__next not-work\">\n        <span>Older</span>\n      </li>\n    );\n  } else {\n    return current === \"\" ? (\n      <li className=\"c-pager--archive__next\">\n        <Link to={`/blogs/${type}page/2/`}>Older</Link>\n      </li>\n    ) : (\n      <li className=\"c-pager--archive__next\">\n        <Link to={`/blogs/${type}page/${current + 1}/`}>Older</Link>\n      </li>\n    );\n  }\n};\n\nconst Skip = ({ show }) => {\n  return show ? <li className=\"skip\">...</li> : \"\";\n};\n\nconst Pagination = ({ num, current, type }) => {\n  let array = [];\n  for (let index = 1; index <= num; index++) {\n    array.push(index);\n  }\n\n  if (num < 6) {\n    return (\n      <PagerWrapper>\n        <ol className=\"c-pager--archive p-section\">\n          <Prev current={current} num={num} type={type} />\n          {(array || []).map((i) =>\n            i === 1 ? (\n              <Li\n                num={i}\n                current={current === i}\n                path={`/blogs/${type}`}\n                type={type}\n              />\n            ) : (\n              <Li\n                num={i}\n                current={current === i}\n                path={`/blogs/${type}page/${i}/`}\n                type={type}\n              />\n            )\n          )}\n          <Next current={current} num={num} type={type} />\n        </ol>\n      </PagerWrapper>\n    );\n  } else {\n    if (num >= 8) {\n      if (current <= 3 || current === \"\") {\n        array = [];\n        for (let index = 1; index <= 5; index++) {\n          array.push(index);\n        }\n\n        return (\n          <PagerWrapper>\n            <ol className=\"c-pager--archive p-section\">\n              <Prev current={current} num={num} type={type} />\n              {(array || []).map((i) =>\n                i === 1 ? (\n                  <Li\n                    num={i}\n                    current={current === i}\n                    path={`/blogs/${type}`}\n                    type={type}\n                  />\n                ) : (\n                  <Li\n                    num={i}\n                    current={current === i}\n                    path={`/blogs/${type}page/${i}/`}\n                    type={type}\n                  />\n                )\n              )}\n              <li className=\"skip\">...</li>\n              <li className=\"c-pager--archive__num\">\n                <Link to={`/blogs/${type}page/${num}/`}>{num}</Link>\n              </li>\n              <Next current={current} num={num} type={type} />\n            </ol>\n          </PagerWrapper>\n        );\n      } else if (current >= num - 3) {\n        array = [];\n        for (let index = num - 4; index <= num; index++) {\n          array.push(index);\n        }\n        return (\n          <PagerWrapper>\n            <ol className=\"c-pager--archive p-section\">\n              <Prev current={current} num={num} type={type} />\n              <li className=\"c-pager--archive__num\">\n                <Link to={`/blogs/${type}`}>1</Link>\n              </li>\n              <li className=\"skip\">...</li>\n              {(array || []).map((i) =>\n                i === 1 ? (\n                  <Li\n                    num={i}\n                    current={current === i}\n                    path={`/blogs/${type}`}\n                    type={type}\n                  />\n                ) : (\n                  <Li\n                    num={i}\n                    current={current === i}\n                    path={`/blogs/${type}page/${i}/`}\n                    type={type}\n                  />\n                )\n              )}\n              <Next current={current} num={num} type={type} />\n            </ol>\n          </PagerWrapper>\n        );\n      } else {\n        array = [];\n        for (let index = current - 1; index <= current + 2; index++) {\n          array.push(index);\n        }\n\n        return (\n          <PagerWrapper>\n            <ol className=\"c-pager--archive p-section\">\n              <Prev current={current} num={num} type={type} />\n              <li className=\"c-pager--archive__num\">\n                <Link to={`/blogs/${type}`}>1</Link>\n              </li>\n              <Skip show={current !== num + (current - 3)} />\n              {(array || []).map((i) => (\n                <Li\n                  num={i}\n                  current={current === i}\n                  path={`/blogs/${type}page/${i}/`}\n                />\n              ))}\n              <Skip show={current !== num - (current + 3)} />\n              <li className=\"c-pager--archive__num\">\n                <Link to={`/blogs/${type}page/${num}/`}>{num}</Link>\n              </li>\n              <Next current={current} num={num} type={type} />\n            </ol>\n          </PagerWrapper>\n        );\n      }\n    } else {\n      return \"\";\n    }\n  }\n};\n\nexport default Pagination;\n\nconst PagerWrapper = styled.div`\n  min-height: 80px;\n  position: relative;\n  text-align: center;\n  ol {\n    list-style: none;\n  }\n  a {\n    text-decoration: none;\n    color: #fff;\n  }\n  .c-pager--archive__next--current:before,\n  .c-pager--archive__next:before {\n    right: 0;\n    transition: 0.5s;\n    transform: skew(45deg);\n  }\n  li {\n    display: inline-block;\n    &.skip {\n      display: none;\n      @media only screen and (min-width: 768px) {\n        display: inline-block;\n      }\n    }\n  }\n  .c-pager--archive__next,\n  .c-pager--archive__next--current,\n  .c-pager--archive__prev,\n  .c-pager--archive__prev--current {\n    z-index: 1;\n    overflow: hidden;\n    border: 1px solid var(--color-blue);\n    top: 0;\n    position: absolute;\n    border-radius: 5px;\n    color: #fff;\n    transition: 0.5s;\n  }\n  .c-pager--archive__prev--current:before,\n  .c-pager--archive__prev:before {\n    left: 0;\n    transition: 0.5s;\n    transform: skew(-45deg);\n  }\n  @media screen and (min-width: 768px) {\n    .c-pager--archive__prev:hover {\n      a {\n        color: var(--color-blue);\n      }\n      &:before {\n        left: -120%;\n      }\n    }\n    .c-pager--archive__next:hover {\n      a {\n        color: var(--color-blue);\n      }\n      &:before {\n        right: -120%;\n      }\n    }\n  }\n  .c-pager--archive__next--current:before,\n  .c-pager--archive__next:before,\n  .c-pager--archive__prev--current:before,\n  .c-pager--archive__prev::before {\n    z-index: -1;\n    position: absolute;\n    content: \"\";\n    top: 0;\n    width: 120%;\n    height: 100%;\n    display: block;\n    background: var(--color-blue);\n  }\n  .c-pager--archive__next--current a,\n  .c-pager--archive__next a {\n    color: #fff;\n  }\n  .c-pager--archive__prev,\n  .c-pager--archive__prev--current {\n    left: 0;\n    display: inline-block !important;\n    a,\n    span {\n      transition: 0.3s;\n      display: block;\n      padding: 10px 50px !important;\n      @media only screen and (min-width: 768px) {\n        padding: 15px 50px !important;\n      }\n    }\n  }\n  .c-pager--archive__next,\n  .c-pager--archive__next--current {\n    right: 0;\n    display: inline-block !important;\n    a,\n    span {\n      transition: 0.3s;\n      display: block;\n      padding: 10px 50px !important;\n      @media only screen and (min-width: 768px) {\n        padding: 15px 50px !important;\n      }\n    }\n  }\n  .not-work {\n    opacity: 0.7;\n    pointer-events: none;\n  }\n  .c-pager--archive__num {\n    display: none;\n    @media only screen and (min-width: 768px) {\n      display: inline-block;\n    }\n    span {\n      display: block;\n      border-radius: 50%;\n      height: 35px;\n      font-size: 1.2rem;\n      width: 35px;\n      border: 1px solid var(--color-blue);\n      text-align: center;\n      line-height: 33px;\n      margin-left: 5px;\n      margin-right: 5px;\n      color: var(--color-blue);\n    }\n    a {\n      display: block;\n      border-radius: 50%;\n      height: 35px;\n      font-size: 1.2rem;\n      width: 35px;\n      border: 1px solid var(--color-blue);\n      text-align: center;\n      line-height: 33px;\n      margin-left: 5px;\n      margin-right: 5px;\n      background: var(--color-blue);\n      color: #fff;\n      @media screen and (min-width: 768px) {\n        transition: 0.3s;\n        &:hover {\n          color: var(--color-blue);\n          background: #fff;\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst Tags = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark {\n          edges {\n            node {\n              frontmatter {\n                tags\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  // タイトルとカテゴリーとタグが記事と一致した時だけ抽出\n  let tags = allMarkdownRemark.edges.reduce((tags, edge) => {\n    const edgeTags = edge.node.frontmatter.tags;\n    return edgeTags ? tags.concat(edgeTags) : tags;\n  }, []);\n\n  let counts = {};\n\n  for (var i = 0; i < tags.length; i++) {\n    let key = tags[i];\n    counts[key] = counts[key] ? counts[key] + 1 : 1;\n  }\n  tags = [];\n  for (let tag in counts) {\n    tags.push({ name: tag, count: counts[tag] });\n  }\n\n  if (!tags) return;\n\n  return (\n    <TagList>\n      <ul>\n        {tags.map((tag, index) => {\n          return (\n            <li className=\"p-tagList__item\" key={`list${index}`}>\n              <Link to={`/blogs/tags/${tag.name}/`}>\n                {tag.name}（{tag.count}）\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </TagList>\n  );\n};\nexport default Tags;\n\nconst TagList = styled.div`\n  ul {\n    list-style: none;\n  }\n  .p-tagList__item {\n    margin-right: 5px;\n    margin-bottom: 10px;\n    display: inline-block;\n  }\n  .p-tagList__item a {\n    text-decoration: none;\n    font-size: 1.1rem;\n    line-height: 1;\n    padding: 3px 3px 5px 3px;\n    color: var(--color-blue);\n    display: block;\n    border-radius: 4px;\n    border: 1px solid var(--color-blue);\n    background: #fff;\n    transition: 0.3s;\n    white-space: nowrap;\n    &:before {\n      content: \"\";\n      width: 1em;\n      height: 1em;\n      vertical-align: -0.2em;\n      display: inline-block;\n      margin-right: 3px;\n      border-radius: 50%;\n      background: #fff;\n      border: 2px solid var(--color-blue);\n      transform: scale(0.5);\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst Tag = ({ tag }) => (\n  <li className=\"p-tagList__item\">\n    <Link to={`/blogs/tags/${encodeURI(tag)}/`}> {tag}</Link>\n  </li>\n);\n\nconst Tags = ({ tags }) => {\n  return (\n    <TagList>\n      <ul>\n        {(tags || []).map((tag) => (\n          <Tag key={tag} tag={tag} />\n        ))}\n      </ul>\n    </TagList>\n  );\n};\n\nexport default Tags;\n\nconst TagList = styled.div`\n  ul {\n    list-style: none;\n  }\n`;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst BreadCrumbList = ({ type, current }) => {\n  return (\n    <BreadCrumb>\n      <ol>\n        <li>\n          <Link to=\"/\">ホーム</Link>\n        </li>\n        {type === `blog` ? (\n          <li>\n            <Link to=\"/blogs/\">ブログ一覧</Link>\n          </li>\n        ) : (\n          \"\"\n        )}\n        <li>{current}</li>\n      </ol>\n    </BreadCrumb>\n  );\n};\n\nexport default BreadCrumbList;\n\nconst BreadCrumb = styled.div`\n  ol {\n    list-style: none;\n    margin-bottom: 20px;\n    @media screen and (min-width: 768px) {\n      margin-bottom: 30px;\n    }\n    li {\n      display: inline-block;\n      font-size: 1.4rem;\n      margin-bottom: 5px;\n      a {\n        color: var(--color-blue);\n        @media screen and (min-width: 768px) {\n          &:hover {\n            text-decoration: none;\n          }\n        }\n      }\n      &:last-child::after {\n        content: none;\n      }\n      &::after {\n        content: \"\";\n        margin: 0 13px 0 10px;\n        display: inline-block;\n        width: 4px;\n        height: 4px;\n        border-right: 2px solid var(--color-blue);\n        border-top: 2px solid var(--color-blue);\n        transform: rotate(45deg);\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"../img\";\nimport styled from \"styled-components\";\nimport { siteMetadata } from \"../../../gatsby-config\";\n\nconst genre = () => {\n  return (\n    <Ganre>\n      <ul className=\"p-localNav c-grid\">\n        {siteMetadata.category.map((item, index) => {\n          return (\n            <li\n              className=\"p-localNav__item c-grid__item--md6\"\n              key={`genre${index}`}\n            >\n              <Link to={`/blogs/${item.slug}/`}>\n                <div className=\"p-localNav__main\">\n                  <h3 className=\"p-localNav__heading\">{item.enName}</h3>\n                  <p className=\"p-localNav__content\">{item.description}</p>\n                </div>\n                <Img filename={`genre-${item.slug}.jpg`} alt={item.enName} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Ganre>\n  );\n};\n\nexport default genre;\nconst Ganre = styled.div`\n  .p-localNav__item {\n    position: relative;\n    height: 130px;\n    text-shadow: 0 0 3px rgb(0, 0, 0, 0.8);\n    margin-bottom: 30px;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 0 4px rgb(0, 0, 0, 0.3);\n    background: var(--color-blue);\n    .gatsby-image-wrapper {\n      height: 100%;\n      width: 100%;\n      transition: 0.3s;\n    }\n    img {\n      object-fit: cover;\n      height: 100%;\n      width: 100%;\n    }\n    @media screen and (min-width: 768px) {\n      &:hover {\n        .gatsby-image-wrapper {\n          opacity: 0.5;\n          transform: scale(1.1);\n        }\n      }\n    }\n  }\n  .p-localNav__main {\n    z-index: 1;\n    position: absolute;\n    color: #fff;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 0 15px;\n  }\n  .p-localNav__heading {\n    color: #fff;\n    width: 100%;\n    font-size: 1.6rem;\n    font-weight: 700;\n    margin-bottom: 10px;\n    letter-spacing: 0.05em;\n    &:after {\n      content: \"\";\n      display: block;\n      height: 2px;\n      width: 20px;\n      margin: 10px auto 0;\n      background: var(--color-accent);\n    }\n    @media screen and (min-width: 768px) {\n      margin-bottom: 15px;\n      letter-spacing: 0.1em;\n      font-size: 1.88rem;\n      &:after {\n        margin: 15px auto 0;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"../img\";\nimport styled from \"styled-components\";\n\nconst profile = () => {\n  return (\n    <Profile>\n      <h2 className=\"c-heading--lg\">管理人について</h2>\n      <Img filename=\"camille.jpg\" className=\"prfImg\" alt=\"かみーゆ\" />\n      <div className=\"c-profile__content\">\n        <div className=\"u-mblg c-editArea\">\n          <p>\n            こんにちは！セブ島在住の気ままな海外ノマドエンジニア・かみーゆです。\n          </p>\n          <ul>\n            <li>日本でフロントエンドを中心に約10年Web制作</li>\n            <li>\n              2019年4月「MacBook Pro\n              とスーツケースだけで生きていこう」と、セブ島に移住\n            </li>\n            <li>セブ島に転職してエンジニア講師</li>\n            <li>2020年オフショア開発担当者</li>\n            <li>疲れたので辞めてプータロー</li>\n            <li>人生の充電中でセブ島ライフを満喫</li>\n            <li>\n              2021年セブ島でビジネスを始めるために仲間と奮闘中（←イマココ）\n            </li>\n          </ul>\n          <p>\n            {\" \"}\n            好きな人といるだけでパワースポット！今は大好きな仲間と消耗しない働き方をするために計画中。\n            13歳の頃から「好きなように生きて好きなように死ぬ」が人生のKPI。\n            <br />\n            「楽しいか」、「かっこいいか」でやることを判断・取捨択一しています。好きなものは肉とビール。\n          </p>\n        </div>\n        <p className=\"u-text-center\">\n          <Link to=\"/about/\" className=\"p-btn--detail\">\n            About Me\n          </Link>\n        </p>\n      </div>\n    </Profile>\n  );\n};\n\nexport default profile;\n\nconst Profile = styled.div`\n  line-height: 2;\n  max-width: 700px;\n  margin: 0 auto;\n  padding-bottom: 50px;\n  .prfImg {\n    width: 200px;\n    border-radius: 50%;\n    display: block;\n    margin: 0 auto 30px;\n  }\n  ul + *,\n  p + * {\n    margin-top: 1em;\n  }\n  ul {\n    list-style: none;\n    & + p {\n      margin-bottom: 1em;\n    }\n  }\n  ul > li {\n    padding-left: 1.5em;\n    position: relative;\n    margin-bottom: 0.5em;\n\n    &::before {\n      left: 8px;\n      top: 6px;\n      display: block;\n      color: #001d7c;\n      content: \"\";\n      width: 0.3em;\n      height: 0.6em;\n      background: none;\n      position: absolute;\n      transform: rotate(45deg);\n      border: 4px solid var(--color-accent);\n      border-width: 0 3px 3px 0;\n    }\n  }\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst Img = ({ filename, alt, className }) => {\n  const { allFile } = useStaticQuery(\n    graphql`\n      query Image {\n        allFile(filter: { sourceInstanceName: { eq: \"assets\" } }) {\n          edges {\n            node {\n              name\n              relativePath\n              sourceInstanceName\n              childImageSharp {\n                gatsbyImageData(formats: [AUTO, WEBP])\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  const img = allFile.edges.find((edge) => {\n    return edge.node.relativePath.includes(filename);\n  });\n\n  return (\n    <GatsbyImage\n      image={getImage(img.node.childImageSharp)}\n      alt={alt}\n      layout=\"fullWidth\"\n      key={img.node.name}\n      className={className}\n    />\n  );\n};\nexport default Img;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport Img from \"../components/img\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport AddTagLink from \"../components/common/add-tag-link\";\nimport Pagination from \"../components/blogList/pagination\";\nimport { Link, graphql } from \"gatsby\";\nimport { siteMetadata } from \"../../gatsby-config\";\nimport BreadCrumbList from \"../components/common/bread-crumb-list\";\nimport TagsList from \"../components/blogs/tag-list\";\nimport Genre from \"../components/common/genre\";\nimport ProfBig from \"../components/common/profile\";\n\nconst category = ({ pageContext, data, location }) => {\n  const { cateSlug, current, page } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n\n  // console.log(siteMetadata.category)\n  let cateName = \"\";\n  let cateEnName = \"\";\n  let cateDescription = \"\";\n  siteMetadata.category.forEach((cate) => {\n    if (cate.slug === cateSlug) {\n      cateDescription = cate.description;\n      cateName = cate.name;\n      cateEnName = cate.enName;\n    }\n  });\n  return (\n    <Layout location={location} title={siteMetadata.title}>\n      <Seo\n        title={`${cateName}`}\n        description={cateDescription}\n        location={location}\n        type=\"archive\"\n      />\n\n      <div className=\"p-pageHeader\">\n        <div className=\"p-pageHeader__main\">\n          <h1 className=\"p-pageHeader__heading\">{cateName}</h1>\n          <p>{cateDescription}</p>\n        </div>\n        <Img filename={`${cateSlug}.jpg`} className=\"p-pageHeader__img\"></Img>\n      </div>\n      <div className=\"page-template-archive\">\n        <div className=\"l-container\">\n          <BreadCrumbList type=\"blog\" current={cateName} />\n          {totalCount === 0 ? (\n            <p className=\"p-txt-center\">\n              {category.name}に関する記事はまだありません\n            </p>\n          ) : (\n            \"\"\n          )}\n          <section className=\"p-section\">\n            <h2 className=\"c-heading--lg\">最新記事</h2>\n            <div className=\"c-grid\">\n              {edges.map(({ node }) => {\n                const { slug } = node.fields;\n                const { title, hero, date, tags } = node.frontmatter;\n                return (\n                  <article\n                    className=\"p-entryCard c-grid__item--md6 c-grid__item--lg4 is-small\"\n                    key={slug}\n                  >\n                    <Link to={slug} className=\"p-entryCard__img\">\n                      {hero ? (\n                        <Img filename={hero} alt={title} />\n                      ) : (\n                        <Img filename=\"common/dummy.png\" alt=\"\" />\n                      )}\n                      <div className=\"p-entryCard__date\">\n                        <time date={date.replace(/\\./g, \"-\")}>{date}</time>\n                      </div>\n                    </Link>\n                    <Link to={slug} className=\"p-entryCard__body\">\n                      <h3 className=\"p-entryCard__heading\">{title}</h3>\n                    </Link>\n                    <div className=\"p-entryCard__footer\">\n                      <AddTagLink tags={tags} />\n                    </div>\n                  </article>\n                );\n              })}\n            </div>\n          </section>\n          {page > 1 ? (\n            <Pagination\n              num={page}\n              current={current}\n              type={`${cateSlug}/`}\n            ></Pagination>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <aside className=\"BigWhite\">\n          <div className=\"l-container\">\n            <section className=\"p-box--gray p-section u-text-center\">\n              <h2 className=\"c-heading--lg\">人気のタグ</h2>\n              <TagsList />\n            </section>\n          </div>\n          <div className=\"l-container\">\n            <section className=\"p-section u-text-center\">\n              <h2 className=\"c-heading--lg\">人気のジャンル</h2>\n              <Genre />\n            </section>\n          </div>\n          <ProfBig />\n        </aside>\n      </div>\n    </Layout>\n  );\n};\n\ncategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default category;\n\nexport const pageQuery = graphql`\n  query ($cateSlug: String, $limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { cateId: { eq: $cateSlug } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            hero\n            cateId\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}