{"expireTime":9007200880801123000,"key":"transformer-remark-markdown-html-fc0bf9b9bff5833784d39eb85e3af971-gatsby-remark-imagesgatsby-remark-autolink-headersgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h2 id=\"npm-scriptでタスクを作って今までのプロジェクトのgulpやlaravel-mixに差し込みたい\">npm-scriptでタスクを作って今までのプロジェクトのgulpやlaravel mixに差し込みたい</h2>\n<p>私はフロント案件開発のタスクランナーとして昔gulp、現在はlaravel mix（webpack）を使っています。</p>\n<p>今までのプロジェクトに新しくタスクを作る必要があるけど、コード書き直すのが面倒だなーと思ってた時にたどり着いたのが、cliです。npm-scriptから実行できるので、gulpやwebpackに合わせて改めてコードを書かなくてOK。</p>\n<p>しかも一度作るとタスクランナーに依存なく<em>使いまわせます</em>。もちろんメンテナンスは必要です。</p>\n<p>imageminをインストールしてさっさと実行したい人は前置きすっ飛ばしてください。</p>\n<h3 id=\"npm-scriptとは？\">npm-scriptとは？</h3>\n<p>私の敬愛するICSメディアさんにとてもわかりやすい説明が掲載されていたのでそのまま引用しました！</p>\n<blockquote>\n<p>ウェブ制作の現場では作業の自動化が流行っています。「Gulp」「Grunt」などのタスクランナーや「webpack」などのビルドシステムなどのツールにより人力の作業を減らすことができ、生産効率や品質の向上につながります。</p>\n<p>どちらもNode.jsのモジュールとして動作するツールですが、実はこれらのタスクランナーを使わずとも、Node.jsインストール時に付属するnpm(Node Package Manager)を使用すれば、タスク処理が実現できます。</p>\n<p>npmとはNode.jsのモジュールを管理するためのツールであり、タスク処理にはnpmの機能のnpm-scriptsを使用します。Gulpやwebpackは有用ですが、npm-scriptsと併用することでさらに便利になります。本記事はnpm-scriptsを使ったタスク実行環境が構築できることを目標に解説します。</p>\n</blockquote>\n<p><a href=\"https://ics.media/entry/12226/\">Node.jsユーザーなら押さえておきたいnpm-scriptsのタスク実行方法まとめ</a></p>\n<h3 id=\"cliとは？\">cliとは？</h3>\n<p>cliとはCLI(Command Line Interface) の略でコマンドラインから色々操作する方法です。\nGitHubにさまざまなCLIが公開されています。</p>\n<ul>\n<li>ESLint</li>\n<li>npm</li>\n<li>imagemin（今回はこれ使います）</li>\n</ul>\n<h2 id=\"imageminをインストール\">imageminをインストール</h2>\n<p>npm で node moduleをインストールします。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm install imagemin imagemin-keep-folder imagemin-mozjpeg imagemin-pngquant imagemin-gifsicle imagemin-svgo --save-dev</code></pre></div>\n<h2 id=\"画像圧縮のjsファイルを作り処理を書く\">画像圧縮のjsファイルを作り処理を書く</h2>\n<p>ディレクトリー構造はこちら。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/ (プロジェクトディレクトリー)\n  ├ node_modules/\n  ├ package.json\n  ├ src/\n  |  └ assets/images/（圧縮前の画像が格納されているフォルダ）\n  ├ html/\n  |  └ assets/images/（圧縮後の画像格納）\n  └ imagemin.js（追加）</code></pre></div>\n<p>imagemin.jsファイルを作り以下のコードを書きます。</p>\n<p>今回はタスクを作るにあたり、こちらのブログ記事を参考にしました。</p>\n<p><a href=\"https://olein-design.com/blog/build-webpage-by-npm-script\">npm-scriptで開発環境を作ってみよう</a></p>\n<p>同じようにコードを書いてやるとimagemin-pngquantの実行でコケます。</p>\n<p>imagemin-pngquantの公式ページで見てみると、配列で書いてねとあるので<code class=\"language-text\">0 ~ 1</code>までの値を指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Type<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>min<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> number<span class=\"token operator\">></span>\nValues<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span><span class=\"token number\">0.</span><span class=\"token punctuation\">.</span><span class=\"token number\">.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.</span><span class=\"token punctuation\">.</span><span class=\"token number\">.1</span><span class=\"token operator\">></span>\nExample<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><a href=\"https://www.npmjs.com/package/imagemin-pngquant\">npm imagemin-pngquant</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/*\n compress images\n */</span>\n<span class=\"token keyword\">const</span> imagemin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imagemin-keep-folder'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> imageminMozjpeg <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imagemin-mozjpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> imageminPngquant <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imagemin-pngquant'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> imageminGifsicle <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imagemin-gifsicle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> imageminSvgo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imagemin-svgo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">imagemin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'src/assets/images/**/*.{jpg,png,gif,svg}'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\tplugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token function\">imageminMozjpeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> quality<span class=\"token operator\">:</span> <span class=\"token number\">80</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">imageminPngquant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> quality<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">imageminGifsicle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">imageminSvgo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">replaceOutputDir</span><span class=\"token operator\">:</span> <span class=\"token parameter\">output</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> output<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">images\\/</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'../../html/assets/images/'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Images optimized'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"packagejson側で画像圧縮（imageminjs）を実行するシェルスクリプトを登録する\">package.json側で画像圧縮（imagemin.js）を実行するシェルスクリプトを登録する</h2>\n<p>あとはpackage.jsonに以下のコードを足します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"imagemin\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node imagemin.js\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"実行コマンド\">実行コマンド</h3>\n<p>あとはコマンドから以下のコードを叩くだけ。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run imagemin</code></pre></div>\n<h3 id=\"他のタスクと一緒に処理\">他のタスクと一緒に処理</h3>\n<p>私は他のタスクと一緒に処理しています。</p>\n<p>シェルスクリプトは<code class=\"language-text\">&amp;</code>で接続することで並列処理、<code class=\"language-text\">&amp;&amp;</code>では直列処理ができます。</p>\n<p>私は普段laravel-mixを使ってますが、画像なんてあまり追加しないのでタスクを立ち上げる際に処理を実行するようにしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"w\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run image &amp; npm run development -- --watch\"</span></code></pre></div>\n<p>続けてシェルスクリプトを追加するのであればこんな感じになると思います。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"watch-poll\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run watch -- --watch-poll\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node imagemin.js\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"w\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run image &amp; npm run development -- --watch\"</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"まとめ\">まとめ</h2>\n<p>タスクランナーに依存せず使いまわせるのはとっても便利です。</p>\n<p>走り書きですが、皆さんのコーディングライフの一助になれば幸いです。</p>\n<p>最後までお読みいただきありがとうございました。</p>"}