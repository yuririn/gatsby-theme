{"expireTime":9007200880805335000,"key":"transformer-remark-markdown-html-8bafb9ed30e15d72d9436d134e54eafa-gatsby-remark-imagesgatsby-remark-autolink-headersgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h2 id=\"elementsubmitでフォームを-send-できる\">element.submit()でフォームを send できる</h2>\n<p>最近、Vue.js などで画面遷移することなくフォームを実装することも多くなりました。あと、リターンキーでフォームの誤送信が起こらないようにして欲しいなどという要望も多めです。なのでフォーム操作をJS制御することって多々あるもんなんです。</p>\n<h2 id=\"フォームの-submit-をとめる方法を考える\">フォームの submit をとめる方法を考える</h2>\n<p>一定条件に満たした場合にフォームを送る時、JS で実装するときふた通りあると思います。<br>\nまずは form タグ内に <code class=\"language-text\">input[type=submit]</code>ボタンを設置する。条件に満たない場合、フォーム機能を止めることもできます。<br>\nもしくは <code class=\"language-text\">input[type=submit]</code> を使わず、特定の button もしくは<code class=\"language-text\">input[type=button]</code> でクリックした時に、<code class=\"language-text\">submit()</code> を発火させる。\nいずれかだと思います。</p>\n<h2 id=\"name-属性に-submit-があるだけで、js-が死ぬ\">name 属性に submit があるだけで、JS が死ぬ</h2>\n<p>後者で操作する時、面倒なことに <code class=\"language-text\">element.submit()</code> は真っ先に name属性に万が一 submit があるだけで、拾ってしまって動かなくなります。</p>\n<p>焦る必要はありません。解決法は超簡単です。name属性の命名を<code class=\"language-text\">submit_btn</code>とか変えましょう。</p>\n<h2 id=\"終わりに\">終わりに</h2>\n<p>前も似たようなことで、name属性に気をつけなければならないと思いました。<br>\nたかだか、そんなもので送信ボタンは動くのでちょっと気をつければいいだけですが気をつけてください。</p>"}